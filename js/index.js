// Generated by CoffeeScript 1.9.2
(function() {
  var $, b, bi, d, di, e, ei, error, f, fi, generateImages, hideError, k, l, li, m, mi, pllalgs, r, ri, show, u, ui, v;

  $ = jQuery;

  b = "./images/b.png";

  bi = "./images/bi.png";

  d = "./images/d.png";

  di = "./images/di.png";

  f = "./images/f.png";

  fi = "./images/fi.png";

  l = "./images/l.png";

  li = "./images/li.png";

  r = "./images/r.png";

  ri = "./images/ri.png";

  u = "./images/u.png";

  ui = "./images/ui.png";

  ei = "./images/ei.png";

  e = "./images/e.png";

  m = "./images/m.png";

  mi = "./images/mi.png";

  pllalgs = {
    "T-Perm": "R U R' U' R' F R2 U' R' U' R U R' F'",
    "J(a)-Perm": "R' U L' U2 R U' R' U2 R L U'",
    "J(b)-Perm": "R U R' F' R U R' U' R' F R2 U' R' U'",
    "R(a)-Perm": "R U R' F' R U2 R' U2 R' F R U R U2 R' U'",
    "R(b)-Perm": "R' U2 R U2 R' F R U R' U' R' F' R2 U'",
    "F-Perm": "R' U' F' R U R' U' R' F R2 U' R' U' R U R' U R",
    "Y-Perm": "F R U' R' U' R U R' F' R U R' U' R' F R F'"
  };

  error = function(message) {
    return $("#warning-message").html(message).show();
  };

  hideError = function() {
    return $("#warning-message").hide();
  };

  show = function(n) {
    return $("#images").append("<img src=" + n + " />");
  };

  generateImages = function() {
    var i, invalidMoves, j, len, len1, message, move, notation;
    $("#images").empty();
    notation = $("#notation").val().split(" ");
    invalidMoves = [];
    for (i = 0, len = notation.length; i < len; i++) {
      move = notation[i];
      switch (move) {
        case "B":
          show(b);
          break;
        case "B'":
        case "Bi":
          show(bi);
          break;
        case "D":
          show(d);
          break;
        case "D'":
        case "Di":
          show(di);
          break;
        case "F":
          show(f);
          break;
        case "F'":
        case "Fi":
          show(fi);
          break;
        case "L":
          show(l);
          break;
        case "L'":
        case "Li":
          show(li);
          break;
        case "R":
          show(r);
          break;
        case "R'":
        case "Ri":
          show(ri);
          break;
        case "U":
          show(u);
          break;
        case "U'":
        case "Ui":
          show(ui);
          break;
        case "E":
          show(e);
          break;
        case "E'":
        case "Ei":
          show(ei);
          break;
        case "M":
          show(m);
          break;
        case "M'":
        case "Mi":
          show(mi);
          break;
        case "B2":
          show(b);
          show(b);
          break;
        case "B2'":
        case "B2i":
          show(bi);
          show(bi);
          break;
        case "D2":
          show(d);
          show(d);
          break;
        case "D2'":
        case "D2i":
          show(di);
          show(di);
          break;
        case "F2":
          show(f);
          show(f);
          break;
        case "F2'":
        case "F2i":
          show(fi);
          show(fi);
          break;
        case "L2":
          show(l);
          show(l);
          break;
        case "L2'":
        case "L2i":
          show(li);
          show(li);
          break;
        case "R2":
          show(r);
          show(r);
          break;
        case "R2'":
        case "R2i":
          show(ri);
          show(ri);
          break;
        case "U2":
          show(u);
          show(u);
          break;
        case "U2'":
        case "U2i":
          show(ui);
          show(ui);
          break;
        default:
          invalidMoves.push(move);
      }
    }
    if (invalidMoves.length > 0) {
      message = "Unable to parse the following moves: <ul>";
      for (j = 0, len1 = invalidMoves.length; j < len1; j++) {
        move = invalidMoves[j];
        message += "<li>" + move + "</li>";
      }
      message += "</ul>";
      return error(message);
    }
  };

  $("#generateImages").on("click", function(event) {
    hideError();
    return generateImages();
  });

  $("#pll-algs").on("change", function(event) {
    var selected;
    hideError();
    selected = $("#pll-algs").find(":selected").text();
    $("#notation").val(pllalgs[selected]);
    return generateImages();
  });

  for (k in pllalgs) {
    v = pllalgs[k];
    $("#pll-algs").append("<option>" + k + "</option>");
  }

  $("#notation").val(pllalgs["T-Perm"]);

  generateImages();

}).call(this);
